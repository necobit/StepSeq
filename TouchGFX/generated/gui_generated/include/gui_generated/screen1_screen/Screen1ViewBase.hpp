/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void stepHL1()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL5()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL6()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL7()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL8()
    {
        // Override and implement this function in Screen1
    }
    virtual void tmpChange(int value)
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL9()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL10()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL11()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL12()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL13()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL14()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL15()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL16()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL1_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL2_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL3_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL4_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL5_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL6_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL7_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL8_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL9_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL10_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL11_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL12_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL13_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL14_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL15_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL16_2()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL1_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL2_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL3_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL4_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL5_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL6_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL7_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL8_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL9_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL10_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL11_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL12_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL13_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL14_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL15_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL16_3()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL1_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL2_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL3_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL4_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL5_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL6_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL7_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL8_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL9_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL10_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL11_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL12_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL13_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL14_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL15_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void stepHL16_4()
    {
        // Override and implement this function in Screen1
    }
    virtual void allclear()
    {
        // Override and implement this function in Screen1
    }
    virtual void play_stop()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::Line line2;
    touchgfx::PainterRGB565 line2Painter;
    touchgfx::Line line3;
    touchgfx::PainterRGB565 line3Painter;
    touchgfx::Line line4;
    touchgfx::PainterRGB565 line4Painter;
    touchgfx::ToggleButton StepButton1;
    touchgfx::ToggleButton StepButton2;
    touchgfx::ToggleButton StepButton3;
    touchgfx::ToggleButton StepButton4;
    touchgfx::ToggleButton StepButton5;
    touchgfx::ToggleButton StepButton6;
    touchgfx::ToggleButton StepButton7;
    touchgfx::ToggleButton StepButton8;
    touchgfx::ToggleButton StepButton9;
    touchgfx::ToggleButton StepButton10;
    touchgfx::ToggleButton StepButton11;
    touchgfx::ToggleButton StepButton12;
    touchgfx::ToggleButton StepButton13;
    touchgfx::ToggleButton StepButton14;
    touchgfx::ToggleButton StepButton15;
    touchgfx::ToggleButton StepButton16;
    touchgfx::ToggleButton StepButton1_2;
    touchgfx::ToggleButton StepButton2_2;
    touchgfx::ToggleButton StepButton3_2;
    touchgfx::ToggleButton StepButton4_2;
    touchgfx::ToggleButton StepButton5_2;
    touchgfx::ToggleButton StepButton6_2;
    touchgfx::ToggleButton StepButton7_2;
    touchgfx::ToggleButton StepButton8_2;
    touchgfx::ToggleButton StepButton9_2;
    touchgfx::ToggleButton StepButton10_2;
    touchgfx::ToggleButton StepButton11_2;
    touchgfx::ToggleButton StepButton12_2;
    touchgfx::ToggleButton StepButton13_2;
    touchgfx::ToggleButton StepButton14_2;
    touchgfx::ToggleButton StepButton15_2;
    touchgfx::ToggleButton StepButton16_2;
    touchgfx::ToggleButton StepButton1_3;
    touchgfx::ToggleButton StepButton2_3;
    touchgfx::ToggleButton StepButton3_3;
    touchgfx::ToggleButton StepButton4_3;
    touchgfx::ToggleButton StepButton5_3;
    touchgfx::ToggleButton StepButton6_3;
    touchgfx::ToggleButton StepButton7_3;
    touchgfx::ToggleButton StepButton8_3;
    touchgfx::ToggleButton StepButton9_3;
    touchgfx::ToggleButton StepButton10_3;
    touchgfx::ToggleButton StepButton11_3;
    touchgfx::ToggleButton StepButton12_3;
    touchgfx::ToggleButton StepButton13_3;
    touchgfx::ToggleButton StepButton14_3;
    touchgfx::ToggleButton StepButton15_3;
    touchgfx::ToggleButton StepButton16_3;
    touchgfx::ToggleButton StepButton1_4;
    touchgfx::ToggleButton StepButton2_4;
    touchgfx::ToggleButton StepButton3_4;
    touchgfx::ToggleButton StepButton4_4;
    touchgfx::ToggleButton StepButton5_4;
    touchgfx::ToggleButton StepButton6_4;
    touchgfx::ToggleButton StepButton7_4;
    touchgfx::ToggleButton StepButton8_4;
    touchgfx::ToggleButton StepButton9_4;
    touchgfx::ToggleButton StepButton10_4;
    touchgfx::ToggleButton StepButton11_4;
    touchgfx::ToggleButton StepButton12_4;
    touchgfx::ToggleButton StepButton13_4;
    touchgfx::ToggleButton StepButton14_4;
    touchgfx::ToggleButton StepButton15_4;
    touchgfx::ToggleButton StepButton16_4;
    touchgfx::Slider tmpSlider;
    touchgfx::TextAreaWithOneWildcard dispBPM;
    touchgfx::MoveAnimator< touchgfx::Circle > stepCircle1;
    touchgfx::PainterRGB565 stepCircle1Painter;
    touchgfx::Circle stepCircle2;
    touchgfx::PainterRGB565 stepCircle2Painter;
    touchgfx::Circle stepCircle3;
    touchgfx::PainterRGB565 stepCircle3Painter;
    touchgfx::Circle stepCircle4;
    touchgfx::PainterRGB565 stepCircle4Painter;
    touchgfx::Circle stepCircle5;
    touchgfx::PainterRGB565 stepCircle5Painter;
    touchgfx::Circle stepCircle6;
    touchgfx::PainterRGB565 stepCircle6Painter;
    touchgfx::Circle stepCircle7;
    touchgfx::PainterRGB565 stepCircle7Painter;
    touchgfx::Circle stepCircle8;
    touchgfx::PainterRGB565 stepCircle8Painter;
    touchgfx::Circle stepCircle9;
    touchgfx::PainterRGB565 stepCircle9Painter;
    touchgfx::Circle stepCircle10;
    touchgfx::PainterRGB565 stepCircle10Painter;
    touchgfx::Circle stepCircle11;
    touchgfx::PainterRGB565 stepCircle11Painter;
    touchgfx::Circle stepCircle12;
    touchgfx::PainterRGB565 stepCircle12Painter;
    touchgfx::Circle stepCircle13;
    touchgfx::PainterRGB565 stepCircle13Painter;
    touchgfx::Circle stepCircle14;
    touchgfx::PainterRGB565 stepCircle14Painter;
    touchgfx::Circle stepCircle15;
    touchgfx::PainterRGB565 stepCircle15Painter;
    touchgfx::Circle stepCircle16;
    touchgfx::PainterRGB565 stepCircle16Painter;
    touchgfx::Button clear_button;
    touchgfx::Button play_button;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea1_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t DISPBPM_SIZE = 10;
    touchgfx::Unicode::UnicodeChar dispBPMBuffer[DISPBPM_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Screen1ViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // SCREEN1VIEWBASE_HPP
